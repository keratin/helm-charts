apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keratin-authn-server.fullname" . }}
  labels:
    {{- include "keratin-authn-server.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "keratin-authn-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "keratin-authn-server.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: internal
              containerPort: 3001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
              httpHeaders:
                - name: Host
                  value:  {{ .Values.appSettings.authnUrl | quote }}
          readinessProbe:
            httpGet:
              path: /health
              port: http
              httpHeaders:
                - name: Host
                  value:  {{ .Values.appSettings.authnUrl | quote }}
         
          env:
            {{- range $key, $value := $.Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: AUTHN_URL
              value: {{ required "A valid .Values.appSettings.authnUrl entry required!" .Values.appSettings.authnUrl | quote }}
            - name: APP_DOMAINS
              value: {{ required "A valid .Values.appSettings.appDomains entry required!" .Values.appSettings.appDomains | quote }}
            - name: PUBLIC_PORT
              value: "3000"
            - name: HTTP_AUTH_USERNAME
              value: {{ required "A valid .Values.internalApi.username entry required!" .Values.internalApi.username | quote }}
            - name: HTTP_AUTH_PASSWORD
              value: {{ required "A valid .Values.internalApi.password entry required!" .Values.internalApi.password | quote }}
            - name: PORT
              value: "3001"
            - name: SECRET_KEY_BASE
              value: {{ required "A valid .Values.secretKeyBase entry required!" .Values.secretKeyBase | quote }}            
            {{- if .Values.persistence.databaseUrl }}
            - name: DATABASE_URL
              value: {{ .Values.persistence.databaseUrl }}
            {{- else }}
              {{- if .Values.mariadb.enabled }} 
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-mariadb
                  key: mariadb-password
            - name: DATABASE_URL
              value: "mysql://{{ .Values.mariadb.db.user }}:$(DATABASE_PASSWORD)@{{ .Release.Name }}-mariadb:{{ .Values.mariadb.service.port }}/{{ .Values.mariadb.db.name }}"
              {{- end }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_URL
              value: {{ include "redis.masterConnectString" . | quote }} 
            {{- else }}
            - name: REDIS_URL
              value: {{ .Values.persistence.redisUrl | quote }} 
            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
