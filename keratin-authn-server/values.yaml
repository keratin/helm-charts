# Default values for keratin-authn-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: keratin/authn-server
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

appSettings:
  authnUrl: ""        # Base URL of the AuthN service i.e. "http://example.com"
  appDomains: ""      # Comma-delimited list of app domains (host and optionally port, no path) i.e: "example.com,app.example.com"
  # publicPort: "8000"  # Public port to be accessed by clients

internalApi:
  # port: "8080"        # internal API port to be accessed by other services
  username: ""        # basic auth username
  password: ""        # basic auth password

# Any HMAC keys used by AuthN will be derived from this base value. 64-byte string, and can be generated with SecureRandom.hex(64)
# See https://github.com/keratin/authn-server/blob/master/docs/config.md#secret_key_base
secretKeyBase: ""

# Provide these parameters if you use external instance of mysql or redis 
# don't forget to set redis.enabled or/and mariadb.enabled to false
persistence:
  databaseUrl: ""
  redisUrl: ""

# Here other env variables from https://github.com/keratin/authn-server/blob/master/docs/config.md#secret_key_base can be provided
env: {}
  # USERNAME_IS_EMAIL: ""
  # EMAIL_USERNAME_DOMAINS: ""

  # PASSWORD_POLICY_SCORE: ""
   
  # FACEBOOK_OAUTH_CREDENTIALS: "<appId>:<appSecret>"
  # GITHUB_OAUTH_CREDENTIALS: ""
  # GOOGLE_OAUTH_CREDENTIALS: ""
  # DISCORD_OAUTH_CREDENTIALS: ""

  # PROXIED: true

  # SENTRY_DSN: ""
  # AIRBRAKE_CREDENTIALS: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

redis:
  enabled: true
  usePassword: false
  cluster:
    enabled: false                    # enable clustering if needed (keratin works only with one instance)
  master:
    persistence:
      enabled: false                  # enable persistence for production use

mariadb:
  enabled: true
  replication:
    enabled: false
  db:
    name: keratin-authn-server
    user: keratin-authn-server
  master:
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 1Gi                       # adjust this size for the task

service:
  type: ClusterIP
  port: 80
  internal: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: auth.example.com
      paths: []
  tls: []
  #  - secretName: auth-example-com-tls
  #    hosts:
  #      - auth.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
